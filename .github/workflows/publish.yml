name: Publish

permissions:
  contents: write

on:
  release:
    types: [created]

jobs:
  publish-github-binaries:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - if: runner.os == 'Linux'
        name: Install missing `libgtk-3-dev`
        run: |
          sudo apt-get update
          sudo apt-get install libgtk-3-dev

      - name: Set up Rust Toolchain
        uses: dtolnay/rust-toolchain@stable

      # can't use caches in tag scope... thanks github!
      - name: Publish CLI Binary
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          # (required) Comma-separated list of binary names (non-extension portion of filename) to build and upload.# Note that glob pattern is not supported yet.
          bin: kfuz2_cli
          # (optional) On which platform to distribute the .tar.gz file.# [default value: unix]# [possible values: all, unix, windows, none]
          tar: unix
          zip: windows
          archive: $bin-$tag-$target
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish EGUI Binary
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          # (required) Comma-separated list of binary names (non-extension portion of filename) to build and upload.# Note that glob pattern is not supported yet.
          bin: kfuz2_egui
          # (optional) On which platform to distribute the .tar.gz file.# [default value: unix]# [possible values: all, unix, windows, none]
          tar: unix
          zip: windows
          archive: $bin-$tag-$target
          token: ${{ secrets.GITHUB_TOKEN }}

      - if: runner.os == 'Linux'
        name: Publish to Crates.io
        continue-on-error: true
        run: cargo publish

  crates_io_publish:
    name: Publish (crates.io)
    needs:
      - publish-github-binaries

    runs-on: macos-14
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: cargo login
        run: |-
          echo "${{ secrets.CRATES_IO_API_TOKEN }}" | cargo login

      - name: "cargo release publish"
        run: cargo publish -p kfuz2_lib